@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@inject LazyAssemblyLoader assemblyLoader
@inject NavigationManager navigationManager
@inject IStringLocalizer<Global> L

<MatThemeProvider Theme="@theme1">
    <Router AppAssembly="typeof(App).Assembly" AdditionalAssemblies="ModuleProvider.AssembliesWithPages" OnNavigateAsync="@OnNavigateAsync">
        @*see https://github.com/dotnet/aspnetcore/issues/25731
                <Navigating>
                <LoadingBackground ShowLogoBox="true">
                    <label>@L["Loading"]</label>
                </LoadingBackground>
            </Navigating>*@
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="typeof(MainLayout)">
                <Authorizing>
                    <AuthorizingInProgress />
                </Authorizing>
                <NotAuthorized>
                    @if (!context.User.Identity.IsAuthenticated)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <UserNotAuthorized />
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <CascadingAuthenticationState>
                <PageNotFound />
            </CascadingAuthenticationState>
        </NotFound>
    </Router>
    <MatToastContainer />
</MatThemeProvider>

@code
{

    MatTheme theme1 = new MatTheme()
    {
        Primary = MatThemeColors.Orange._500.Value,
        Secondary = MatThemeColors.BlueGrey._500.Value
    };
    private async Task OnNavigateAsync(NavigationContext args)
    {
        if (navigationManager.IsWebAssembly())
            if (args.Path.Equals("admin", StringComparison.OrdinalIgnoreCase))
            {
                var assemblies = await assemblyLoader.LoadAssembliesAsync(
                    new List<string>() { "BlazorBoilerplate.Theme.Material.Admin.dll", "Blazored.TextEditor.dll" });

                ModuleProvider.AddModules(assemblies);
            }
    }
}