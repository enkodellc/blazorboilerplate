@page "/account/login2"

@inherits Login2Base
@layout LoginLayout

<AuthorizeView Context="AuthorizeContext">
<Authorized>
        <LoadingBackground>
            <label>@L["Loading"]</label>
        </LoadingBackground>
    </Authorized>
    <NotAuthorized>
        @if (loginViewModel == null)
        {
            <LoadingBackground />
        }
        else
        {
            @if (loginViewModel.EnableLocalLogin)
            {
                <MudCard Elevation="25">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudIconButton Icon="@Icons.Filled.House" Class="ml-auto" Link="/" />
                            <div class="logo">
                                <a href="/" title="@appState.AppName Home"><img src="_content/SSDCPortal.Theme.Material/images/logo-dark.svg" style="width:100px;" title="@appState.AppName Home" alt="@appState.AppName" /><br />@appState.AppName</a>
                                <br />
                            </div>
                            <MudText Typo="Typo.h5" Align="Align.Center">@L["Log in"]</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <EditForm Model="@loginViewModel" OnValidSubmit="@SubmitLogin">
                            <FluentValidationValidator />
                            <ValidationSummary />
                            <MudTextField AutoFocus="true" @bind-Value="@loginViewModel.UserName" Label=@L["UserName"] AdornmentIcon="@Icons.Material.Filled.Person" Adornment="Adornment.End" FullWidth="true" Required="true" tabindex="1"></MudTextField>

                            <MudTextField @bind-Value="@loginViewModel.Password" Label=@L["Password"] AdornmentIcon="@Icons.Material.Outlined.Lock" Adornment="Adornment.End" FullWidth="true" Required="true" InputType="InputType.Password" tabindex="2"></MudTextField>

                            @if (loginViewModel.AllowRememberLogin)
                            {<MudCheckBox @bind-Checked="@loginViewModel.RememberMe" Class="ml-n2">@L["Keep me logged in"]</MudCheckBox> <br />}

                            <MudButton ButtonType="ButtonType.Submit" tabindex="3" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">@L["Login"]</MudButton>
                        </EditForm>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton OnClick="@Register" Variant="Variant.Filled" Color="Color.Primary" Class="mr-auto">@L["Sign up"]</MudButton>
                    </MudCardActions>
                </MudCard>
                <MudExpansionPanels>
                    <MudExpansionPanel @bind-Expanded="@forgotPasswordToggle">
                        <TitleContent>
                            @L["Forgot your password?"]
                        </TitleContent>
                        <ChildContent>
                            <EditForm Model="@forgotPasswordViewModel" OnValidSubmit="@ForgotPassword">
                                <FluentValidationValidator />
                                <ValidationSummary />
                                    <MudTextField @bind-Value="@forgotPasswordViewModel.Email" Label=@L["Email"] AdornmentIcon="@Icons.Material.Outlined.Mail" Adornment="Adornment.End" FullWidth="true" Required="true"></MudTextField>
                              
                                    <MudButton Class="ml-auto" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@L["Submit"]</MudButton>
                            </EditForm>
                        </ChildContent>
                    </MudExpansionPanel>
                </MudExpansionPanels>
            }
            @if (loginViewModel.VisibleExternalProviders.Any())
            {
                <br />
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            @if (!loginViewModel.EnableLocalLogin)
                            {
                                <MudIconButton Icon="@Icons.Filled.Home" Class="ml-auto" Link="/" />
                                <div class="logo">
                                    <a href="/" title="@appState.AppName Home"><img src="_content/SSDCPortal.Theme.Material/images/logo-dark.svg" style="width:100px;" title="@appState.AppName Home" alt="@appState.AppName" /><br />@appState.AppName</a>
                                    <br />
                                </div>
                            }
                            <MudText Typo="Typo.h5" Align="Align.Center">@L["Sign in with"]</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent Class="d-flex flex-column">
                        @foreach (var provider in loginViewModel.VisibleExternalProviders)
                        {
                            @switch (provider.AuthenticationScheme)
                            {
                                case "Google":
                                case "Facebook":
                                    <MudButton Class="signInWithButton" Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => SignInWith(provider))"><img height="18" src="/images/@(provider.AuthenticationScheme.ToLower()).svg" /></MudButton>
                                    break;
                                case "Twitter":
                                case "Microsoft":
                                case "Apple":
                                    <MudButton Class="signInWithButton" Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => SignInWith(provider))"><img height="18" src="/images/@(provider.AuthenticationScheme.ToLower()).svg" />&nbsp;@provider.DisplayName</MudButton>
                                    break;
                                default:
                                    <MudButton Class="signInWithButton" Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => SignInWith(provider))">@provider.DisplayName</MudButton>
                                    break;
                            }
                        }
                    </MudCardContent>
                </MudCard>}
            @if (!loginViewModel.EnableLocalLogin && !loginViewModel.VisibleExternalProviders.Any())
            {
                <MudAlert Severity="Severity.Warning">
                    <strong>Invalid login request</strong>
                    There are no login schemes configured for this client.
                </MudAlert>
            }
        }
    </NotAuthorized>
</AuthorizeView>
@code {

}
