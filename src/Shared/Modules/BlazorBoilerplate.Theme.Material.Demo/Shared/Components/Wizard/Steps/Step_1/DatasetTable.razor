@inject IStringLocalizer<Global> L
@using System
@inject IApiClient apiClient
@inject IViewNotifier viewNotifier

<MatTable Items="@DatasetResponse" style="width:stretch" class="mat-elevation-z5" AllowSelection="false">
    <MatTableHeader>
        <th>Name</th>
        <th>Rows</th>
        <th>Columns</th>
        <th>Date</th>
        <th></th>
    </MatTableHeader>
    <MatTableRow>
        <td>
            <a href="" Style="cursor: pointer;" @onclick="@(() => { Console.WriteLine("Hello"); })">@context.Name</a>
        </td>
        <td>@context.Rows</td>
        <td>@context.Columns</td>
        <td style="white-space:nowrap;">@context.Creation_date</td>
        <td>
            <CustomMenuItem GoNext="GoNext" HandleClick="@(() => HandleDatasetChanged(context))"></CustomMenuItem>
        </td>
    </MatTableRow>
</MatTable>

@code {

    [Parameter]
    public List<GetDatasetsResponseDto> DatasetResponse { get; set; }

    [Parameter]
    public StartAutoMLRequestDto SelectedDataset { get; set; }

    [Parameter]
    public EventCallback<StartAutoMLRequestDto> SelectedDatasetChanged { get; set; }

    [Parameter]
    public EventCallback GoNext { get; set; }

    MatButton Button;
    BaseMatMenu Menu;

    public void OnClick(MouseEventArgs e)
    {
        this.Menu.OpenAsync(Button.Ref);
    }


    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    /// <summary>
    /// handle click on icon run,
    /// </summary>
    private async void HandleDatasetChanged(GetDatasetsResponseDto obj)
    {
        SelectedDataset.DatasetName = obj.Name;
        SelectedDataset.DatasetType = obj.Type;
        await SelectedDatasetChanged.InvokeAsync(SelectedDataset);
    }


}