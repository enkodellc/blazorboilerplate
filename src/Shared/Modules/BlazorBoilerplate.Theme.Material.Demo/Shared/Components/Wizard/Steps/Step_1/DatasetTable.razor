@inject IStringLocalizer<Global> L
@using System
@inject IApiClient apiClient
@inject IViewNotifier viewNotifier

<MatTable Items="@DatasetResponse" style="width:stretch" class="mat-elevation-z5" AllowSelection="false">
    <MatTableHeader>
        <th>Type</th>
        <th>Name</th>
        <th>Rows</th>
        <th>Columns</th>
        <th>Date</th>
    </MatTableHeader>
    <MatTableRow>
        <td>@context.Type</td>
        <td>@context.Name</td>
        <td>500</td>
        <td>20</td>
        <td>
            2022-01-01
            <MatSelect Icon="menu" Label="Menu" TValue="int" Value="-1" Style="float: right; cursor: pointer" @onclick="@(() => { HandleDatasetChanged(context); })">
                <MatOption TValue="int" Value="0">Delete</MatOption>
                <MatOption TValue="int" Value="1" @onclick="@GoNext">Run</MatOption>
            </MatSelect>
        </td>

    </MatTableRow>
</MatTable>

@code {

    [Parameter]
    public List<GetDatasetsResponseDto> DatasetResponse { get; set; }

    [Parameter]
    public StartAutoMLRequestDto SelectedDataset { get; set; }

    [Parameter]
    public EventCallback<StartAutoMLRequestDto> SelectedDatasetChanged { get; set; }

    [Parameter]
    public EventCallback GoNext { get; set; }

    private bool toggledValue = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    // TODO: i think menu with run and delete could be pretier with just two icon (run and delete, but i got async problem with it)

    /// <summary>
    /// handle click on icon run,
    /// </summary>
    private async void HandleDatasetChanged(GetDatasetsResponseDto obj)
    {
        SelectedDataset.DatasetName = obj.Name;
        SelectedDataset.DatasetType = obj.Type;
        await SelectedDatasetChanged.InvokeAsync(SelectedDataset);
    }

}