@page "/"
@namespace BlazorBoilerplate.Server.Pages
@using BlazorBoilerplate.Server.Extensions
@using BlazorBoilerplate.Shared.Providers
@using Microsoft.AspNetCore.Hosting
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, BlazorBoilerplate.Shared
@inject IWebHostEnvironment env

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <meta name="author" content="Enkodellc / Keith Fimreite">
    <meta name="description" content="Blazor Boilerplate & Starter Kit - A real world Example ">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-touch-fullscreen" content="yes">
    @if (env.IsBlazorServer())
    {
        <title>BlazorBoilerplate &amp; Starter Kit (SSB)</title>
    }
    else
    {
        <title>BlazorBoilerplate &amp; Starter Kit (CSB)</title>
    }
    <base href="~/" />
    <link href="manifest.json" rel="manifest" />
</head>
<body>
    <!-- SSB -->
    @{
        this.HttpContext.Response.Cookies.Append(
          Microsoft.AspNetCore.Localization.CookieRequestCultureProvider.DefaultCookieName,
          Microsoft.AspNetCore.Localization.CookieRequestCultureProvider.MakeCookieValue(
            new Microsoft.AspNetCore.Localization.RequestCulture(
                System.Globalization.CultureInfo.CurrentCulture,
                System.Globalization.CultureInfo.CurrentUICulture)),
            new Microsoft.AspNetCore.Http.CookieOptions() { Expires = DateTimeOffset.Now.AddDays(30) });
    }

    @if (env.IsBlazorServer())
    {
        @(Html.AntiForgeryToken())
        <app>
            <component type='BlazorBoilerplate.Extensions.ModuleLoader.RootComponents.First(m => m.Selector == "app").ComponentType' render-mode="ServerPrerendered" />
        </app>
    }
    else
    {
        <app wasm>
        </app>
    }

    <div id="blazor-error-ui">
        <i class="material-icons">error</i>
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    @if (env.IsBlazorServer())
    {
        <script src="_framework/blazor.server.js"></script>
    }
    else
    {
        <script src="_framework/blazor.webassembly.js"></script>
    }
    <!-- load remaining JS after blazor boot loads -->
    <script src="js/interop.js"></script>
    <script src="_content/Microsoft.AspNetCore.ProtectedBrowserStorage/protectedBrowserStorage.js"></script>
    <!-- https://docs.microsoft.com/en-us/aspnet/core/blazor/progressive-web-app -->
    <script>navigator.serviceWorker.register('service-worker.js');</script>
</body>
</html>
