@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject IMatToaster matToaster
<h3>Books</h3>
@if (books == null)
{
    <LoadingBackground ShowLogoBox="true">
        <label>Loading Books</label>
    </LoadingBackground>
}
else
{
    <MatTable Class="mat-elevation-z5" Items="@books" LoadInitialData="true" Striped="true" RequestApiOnlyOnce="true"
              DebounceMilliseconds="150">
        <MatTableHeader>
            <th>Title</th>
            <th>Author</th>
            <th>Book Store</th>
        </MatTableHeader>
        <MatTableRow Context="BookRow">
            <td><div style="width:130px;">@BookRow.Title</div></td>
            <td><div style="width:130px;">@BookRow.Author</div></td>
            <td><div style="width:130px;">@BookRow.BookStoreTitle</div></td>
        </MatTableRow>
    </MatTable>
}
@code {
    List<Book> books = new List<Book>();
    protected override async Task OnInitializedAsync()
    {
        await RetrieveBooksList();
    }
    public async Task RetrieveBooksList()
    {
        ApiResponseDto apiResponse = await Http.GetJsonAsync<ApiResponseDto>("/api/Books/GetAllBooks");
        if (apiResponse.StatusCode == 200)
        {
            matToaster.Add(apiResponse.Message, MatToastType.Success, "Books Retrieved");
            books = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Book>>(apiResponse.Result.ToString());
        }
        else
        {
            matToaster.Add(apiResponse.Message + " : " + apiResponse.StatusCode, MatToastType.Danger, "Books Retrieval Failed");
        }
    }
}